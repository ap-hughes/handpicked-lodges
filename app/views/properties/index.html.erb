<% content_for :meta_title, "Handpicked Lodges in and around Aviemore" %>
<% content_for :meta_description, "Great pet friendly lodges in the North with woodburners and sauna/hottub in Aviemore and the Cairngorms, sleeping 2,4,6 & 8" %>
<script src="//code.jquery.com/jquery-1.9.1.min.js"></script>
<div class="container">
  <div class="row">
    <h1 class="text-center">Luxury Lodges in Aviemore and the Cairngorms</h1>
    <div class="col-xs-12">
      <p>Our lodges are all unique and characterful, but also wonderfully comfortable and welcoming. We want these handpicked holiday homes to truly be your home from home so we've made sure that they are fully kitted out with everything you may need during your stay. They are all perfect for families and for dogs and are in convenient but peaceful locations. They are all close to shops for everyday needs - but the Handpicked Lodges team are also at the end of the phone and only 15 minutes away should you ever need any further help or advice.</p>
    </div>
  </div>
</div>
<div class="container">
  <div class="main-container">
    <div class="row">
      <div class="col-xs-12 col-lg-4 tall" id="properties-sidebar">
          <div class="map-button">
            <div class="map-button-text">
              <p>Lodge locations <%= fa_icon "map-marker" %></p>
            </div>
          </div>
        <div class="properties-sidebar-content">
          <h4 class="text-center">Check availability for your handpicked lodge</h4>
          <%= render 'shared/availability-checker' %>
        </div>
      </div>
      <div class="col-xs-12 col-lg-8">
        <div class="index-content-container">
          <div class="row">
            <div id="properties">
              <%= render 'properties' %>
            </div>
            <div id="spinner">
              <div class="spinner">
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<div id="map-overlay">
  <div class="map-container">
    <div id='index-map'>
    </div>
    <button class="map-close text-right" onclick="off()">X</button>
  </div>
</div>
<script>
  $(document).ready(function() {
    $("#properties-search").submit(function() {
      $.get($("#properties-search").attr("action"), $("#properties-search").serialize(), null, "script");
      return false;
    });
  });
</script>
<script>
  $( ".map-button" ).click(function() {
    $( "#map-overlay" ).fadeIn( "slow", function() {
      map.resize();
      // Animation complete
    });
  });

  // function on() {
  //     document.getElementById("map-overlay").style.display = "block";
  // }
  function off() {
      document.getElementById("map-overlay").style.display = "none";
  }
  var token = "<%= ENV["MAPBOX"] %>";
  mapboxgl.accessToken = token;
  // Set max bounds of map to the whole of UK
  var bounds = [
      [-11.023648, 48.675969], // Southwest coordinates
      [2.599399, 61.280440]  // Northeast coordinates
  ];

  var map = new mapboxgl.Map({
    container: 'index-map',
    style: 'mapbox://styles/mapbox/streets-v10',
    center: [-3.800854, 57.180641], // starting position
    zoom: 9, // starting zoom
    maxBounds: bounds // Sets bounds as max
  });

  // Add zoom and rotation controls to the map.
  map.addControl(new mapboxgl.NavigationControl());

  var indexGeojson = {
    "type": 'FeatureCollection',
    "features": []
  };

  // helper function to create geoJson "feature"
  const createGeoJsonFeature = (longitude, latitude, title, photo, sleeps, bedrooms, bathrooms, url) => {
    return {
      "type": 'Feature',
      "geometry": {
        "type": 'Point',
        "coordinates": [longitude, latitude]
      },
      "properties": {
        "title": title,
        "photo": photo,
        "sleeps": sleeps,
        "bedrooms": bedrooms,
        "bathrooms": bathrooms,
        "url": url
      }
    }
  };

  // helper function to add feature to indexGeoJson
  const addToGeoJson = (geoJsonFeature) => {
    indexGeojson.features.push(geoJsonFeature)
  };

  // add the data to the indexGeojson
  let longitude = 1.0;
  let latitude = 1.0;
  let title = "";
  let photo = "";
  let sleeps = 1.0;
  let bedrooms = 1.0;
  let bathrooms = 1.0;
  let url = "";

  <% @properties.each do |property| %>
    longitude = <%= property.longitude %>
    latitude = <%= property.latitude %>
    title = "<%= property.name %>"
    <% if property.hero_image.blank? %>
      photo = "<%= image_path("cedar-lodge.jpg") %>"
    <% else %>
      photo = "<%= cl_image_path(property.hero_image) %>"
    <% end %>
    sleeps = <%= property.sleeps %>
    bedrooms = <%= property.bedrooms %>
    bathrooms = <%= property.bathrooms %>
    url = "properties/" + <%= "#{property.id}" %>
    addToGeoJson(createGeoJsonFeature(longitude, latitude, title, photo, sleeps, bedrooms, bathrooms, url));
  <% end %>

  map.on('load', function(e) {
    map.addSource('properties', {
      type: 'geojson',
      data: indexGeojson
    });
  });

  function flyToProperty(currentFeature) {
    map.flyTo({
      center: [(currentFeature.geometry.coordinates[0]), currentFeature.geometry.coordinates[1] - 0.015],
      zoom: 12,
      speed: 0.5
    });
  }

  function createPopUp(currentFeature) {
    var popUps = document.getElementsByClassName('mapboxgl-popup');
    // Check if there is already a popup on the map and if so, remove it
    if (popUps[0]) popUps[0].remove();

    var popup = new mapboxgl.Popup({ offset: 25 })
      .setLngLat(currentFeature.geometry.coordinates)
      .setHTML('<h5>' + currentFeature.properties.title + '</h5>' + '<img src=' + currentFeature.properties.photo + ' height="150" width="200">' + '<p><strong>Sleeps:</strong> ' + currentFeature.properties.sleeps + '</p><p><strong>Bedrooms:</strong> ' + currentFeature.properties.bedrooms + '</p><p><strong>Bathrooms:</strong> ' + currentFeature.properties.bathrooms + '</p><a href=' + currentFeature.properties.url + '>' + '<h6 class="map-btn">View Lodge</h6></a>')
      .addTo(map);
  }

  // this is so it is possible to use .remove() function in older browsers
  if (!('remove' in Element.prototype)) {
    Element.prototype.remove = function() {
      if (this.parentNode) {
        this.parentNode.removeChild(this);
      }
    };
  }

  const pointLinks = document.querySelectorAll('.point-link');
  pointLinks.forEach((element) => {
    // Add an event listener for the links in the sidebar listing
    element.addEventListener('click', function(e) {
      // Update the currentFeature to the store associated with the clicked link
      var clickedListing = indexGeojson.features[this.dataset.position];
      // 1. Fly to the point associated with the clicked link
      flyToProperty(clickedListing);
      // 2. Close all other popups and display popup for clicked property
      createPopUp(clickedListing);
    });
  })

  // Add markers to map
  indexGeojson.features.forEach(function(marker) {
    // create a HTML element for each feature
    var el = document.createElement('i');
    el.className = 'marker';
    // make a marker for each poi feature and add to the map
    new mapboxgl.Marker(el)
    .setLngLat(marker.geometry.coordinates)
    .setPopup(new mapboxgl.Popup({ offset: 25 })
    .setHTML('<h5>' + marker.properties.title + '</h5>' + '<img src=' + marker.properties.photo + ' height="150" width="200">' + '<p><strong>Sleeps:</strong> ' + marker.properties.sleeps + '</p><p><strong>Bedrooms:</strong> ' + marker.properties.bedrooms + '</p><p><strong>Bathrooms:</strong> ' + marker.properties.bathrooms + '</p><a href=' + marker.properties.url + '>' + '<h6 class="map-btn">View Lodge</h6></a>'))
    .addTo(map);
    // console.log(marker.geometry.coordinates[0] - )

    el.addEventListener('click', (e) => {
      flyToProperty(marker);
      createPopUp(marker);
      e.stopPropagation();
      // if (activeItem[0]) {
      //   activeItem[0].classList.remove('active');
      // }
      // var listing = document.getElementById('listing-' + i);
      // console.log(listing);
      // listing.classList.add('active');
    })
  });

</script>
